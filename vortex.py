# -*- coding: utf-8 -*-
"""
Created on Fri May 11 17:15:16 2018

@author: rajerame
"""

import math
import numpy
from matplotlib import pyplot

#vortices

gamma = 5.0                      # strength of vortex 
Nv=300              #number of vortices
a=1                     #distance between vortices
x_vortex=numpy.arange(-Nv*a/2,Nv*a/2,a)
y_vortex=numpy.zeros(Nv) # location of the vortex

N = 100                                # Number of points in each direction
x_start, x_end = -5*a, 5*a            # x-direction boundaries
y_start, y_end = -a,a            # y-direction boundaries
x = numpy.linspace(x_start, x_end, N)    # computes a 1D-array for x
y = numpy.linspace(y_start, y_end, N)    # computes a 1D-array for y
X, Y = numpy.meshgrid(x, y)              # generates a mesh grid


def get_velocity_vortex(strength, xv, yv, X, Y):
    """
    Returns the velocity field generated by a vortex.
    
    Parameters
    ----------
    strength: float
        Strength of the vortex.
    xv: float
        x-coordinate of the vortex.
    yv: float
        y-coordinate of the vortex.
    X: 2D Numpy array of floats
        x-coordinate of the mesh points.
    Y: 2D Numpy array of floats
        y-coordinate of the mesh points.
    
    Returns
    -------
    u: 2D Numpy array of floats
        x-component of the velocity vector field.
    v: 2D Numpy array of floats
        y-component of the velocity vector field.
    """
    u = +strength / (2 * math.pi) * (Y - yv) / ((X - xv)**2 + (Y - yv)**2)
    v = -strength / (2 * math.pi) * (X - xv) / ((X - xv)**2 + (Y - yv)**2)
    
    return u, v


def get_stream_function_vortex(strength, xv, yv, X, Y):
    """
    Returns the stream-function generated by a vortex.
    
    Parameters
    ----------
    strength: float
        Strength of the vortex.
    xv: float
        x-coordinate of the vortex.
    yv: float
        y-coordinate of the vortex.
    X: 2D Numpy array of floats
        x-coordinate of the mesh points.
    Y: 2D Numpy array of floats
        y-coordinate of the mesh points.
    
    Returns
    -------
    psi: 2D Numpy array of floats
        The stream-function.
    """
    psi = strength / (4 * math.pi) * numpy.log((X - xv)**2 + (Y - yv)**2)
    
    return psi


v=numpy.zeros((N, N), dtype=float)
u=numpy.zeros((N, N), dtype=float)

for x in x_vortex:
    for y in y_vortex:
        u=u+get_velocity_vortex(gamma, x, y, X, Y)[0]
        v=v+get_velocity_vortex(gamma, x, y, X, Y)[1]
        





# plot the streamlines
height = 2
width =  (x_end - x_start)/(y_end - y_start) * height

pyplot.figure(figsize=(width, height))
pyplot.xlabel('x', fontsize=16)
pyplot.ylabel('y', fontsize=16)
pyplot.xlim(x_start, x_end)
pyplot.ylim(y_start, y_end)
pyplot.streamplot(X, Y, u, v,
                 density=1, linewidth=1, arrowsize=1, arrowstyle='->')
pyplot.scatter(x_vortex, y_vortex, color='#CD2305', s=80, marker='o');
